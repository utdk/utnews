<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityFormInterface;
use Drupal\utnews_readonly\ReadOnlyHelper;

/**
 * Implements hook_form_alter().
 */
function utnews_readonly_form_alter(array &$form, FormStateInterface &$form_state) {
  if (!$form_object = $form_state->getFormObject()) {
    return;
  }
  if (!$form_object instanceof EntityFormInterface) {
    return;
  }
  $form_entity = $form_object->getEntity();
  // Only modify forms that match a predefined pattern.
  if (!ReadOnlyHelper::matchesReadOnlyPattern($form_entity->id())) {
    return;
  }
  ReadOnlyHelper::warn();
  // Disable various form elements.
  $form['#validate'][] = '_utnews_readonly_validate_failure';
  if (isset($form['actions']['submit'])) {
    $form['actions']['submit']['#disabled'] = TRUE;
  }
  if (isset($form['actions']['delete'])) {
    unset($form['actions']['delete']);
  }
  foreach (ReadOnlyHelper::$disabledFields as $field) {
    if (isset($form[$field])) {
      $form[$field]['#disabled'] = TRUE;
    }
    if (isset($form['submission'][$field])) {
      $form['submission'][$field]['#disabled'] = TRUE;
    }
    if (isset($form['cardinality_container'][$field])) {
      $form['cardinality_container'][$field]['#disabled'] = TRUE;
    }
  }
}

/**
 * Implements hook_entity_operation_alter().
 */
function utnews_readonly_entity_operation_alter(array &$operations, EntityInterface $entity) {
  $entity_type = $entity->getEntityTypeId();
  if (!ReadOnlyHelper::matchesReadOnlyPattern($entity->id())) {
    return;
  }
  switch ($entity_type) {
    case 'field_config':
      $operations = [
        'locked' => [
          'title' => t('Locked'),
        ]
      ];
      break;
    case 'taxonomy_vocabulary':
      // Partially lock Taxonomy, but still leave listing and adding terms.
      foreach ($operations as $key => $value) {
        if ($key != 'list' && $key != 'add') {
          unset($operations[$key]);
        }
      }
      break;

    case 'view':
      // Partially lock Views, but still leave disabling.
      unset($operations['edit']);
      unset($operations['duplicate']);
      unset($operations['delete']);
      break;

    case 'node_type':
    case 'block_content_type':
      // Label node/block entity operations as read-only.
      foreach ($operations as $key => $value) {
        if ($key !== 'manage-fields') {
          unset($operations[$key]);
        }
      }
      $operations['manage-fields']['title'] = t('View fields (read-only)');
      break;
  }
}

/**
 * Implements hook_page_attachments().
 */
function utnews_readonly_page_attachments(array &$attachments) {
  // Add display modifications to specific pages that can't be targeted as
  // routes.
  $route = \Drupal::routeMatch();
  $id = ReadOnlyHelper::getId($route);
  if (ReadOnlyHelper::matchesReadOnlyPattern($id)) {
    $attachments['#attached']['library'][] = 'utnews_readonly/base';
  }
}
