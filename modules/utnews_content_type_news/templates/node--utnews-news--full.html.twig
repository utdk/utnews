{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available default variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * Available custom variables:
 * - has_sidebar_fields: Used for defining layouts with/without sidebar
 * - author_information: Author information - for the author image, name, description
 * - main_image: The news story image
 * - news_tags: News story tags
 * - news_categories: News story categories
 * - linked_title: The title field pointing to the node or external URL
 * - body_summary: The summary of the body field
 */
#}

{%
  set classes = [
    view_mode ? view_mode|clean_class,
    not node.isPublished() ? 'is-unpublished',
    node.bundle|clean_class,
    'clearfix',
  ]
%}
<article{{ attributes.addClass(classes) }}>
  <div class="utnews__top-row">
    {% if author_information %}
      <div class="utnews__author-wrapper">
        <span class="field__label">By </span>
        <span class="utnews__author">{{ author_information.name }}</span>
      </div>
    {% endif %}

    {% if content.field_utnews_publication_date|render is not empty %}
      <div class="utnews__published-wrapper">
        <span class="field__label">Published: </span>
        <span class="utnews__published">{{ content.field_utnews_publication_date }}</span>
      </div>
    {% endif %}
    {% if content.field_utnews_external_link|render is not empty %}
      <div class="utnews__external-link-wrapper">
        <span>External link:</span>
        {{ content.field_utnews_external_link }}
      </div>
    {% endif %}
  </div>

  {% if has_sidebar_fields %}
    <div class="utnews__wrapper">
  {% else %}
    <div class="utnews__wrapper-no-sidebar">
  {% endif %}
    <div class="utnews__left-col">
      {% if main_image %}
        <div class="utnews__image-wrapper">
          {{ main_image }}
        </div>
      {% endif %}

      {% if content.field_utnews_body %}
        <div class="utnews__body-wrapper">
          {{ content.field_utnews_body }}
        </div>
      {% endif %}
    </div>

    {% if author_information %}
      <div class="utnews__author-information-wrapper">
        {% if author_information.image %}
          <div class="utnews__image">{{ author_information.image }}</div>
        {% endif %}

        {% if author_information.name or author_information.description %}
          <div class="data-wrapper">
            {% if author_information.name %}
              <h3 class="ut-headline">About {{ author_information.name }}</h3>
            {% endif %}

            {% if author_information.description %}
              <div class="utnews__description-wrapper">{{ author_information.description }}</div>
            {% endif %}
          </div>
        {% endif %}
      </div>
    {% endif %}

    {% if has_sidebar_fields %}
      <div class="utnews__right-col">
        {% if news_categories %}
          <div class="utnews__categories-wrapper">
            <h5 class="field__label">News category: </h5>
            <span class="utnews__categories">
              {% for category in news_categories %}
                {{ category }}
              {% endfor %}
            </span>
          </div>
        {% endif %}

        {% if news_tags %}
          <div class="utnews__tags-wrapper">
            <h5 class="field__label">News tags: </h5>
            <span class="utnews__tags">
              {% for tag in news_tags %}
                <span class="utnews__tag">{{ tag }}</span>
              {% endfor %}
            </span>
          </div>
        {% endif %}
      </div>
    {% endif %}
  </div>
</article>
