<?php

/**
 * @file
 * Contains News article block type .module file.
 */

use Drupal\block_content\BlockContentInterface;
use Drupal\utnews_block_type_news_listing\NewsListingHelper;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function utnews_block_type_news_listing_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Add a template suggestion for the utnews_article_listing bundle.
  if (isset($variables['elements']['content']['#block_content'])) {
    $theme_hook_original = $variables['theme_hook_original'];
    $base_plugin_id = $variables['elements']['#base_plugin_id'];
    $bundle = $variables['elements']['content']['#block_content']->bundle();
    // Theme suggestions for custom inline blocks are already correctly added by
    // core, so we do not want to add another one here.
    if ($bundle === 'utnews_article_listing' && $base_plugin_id !== 'inline_block') {
      // Add a bundle-specific theme suggestion.
      array_splice($suggestions, 1, 0, $theme_hook_original . '__' . $base_plugin_id . '__' . $bundle);
    }
  }
}

/**
 * Implements hook_theme().
 */
function utnews_block_type_news_listing_theme($existing, $type, $theme, $path) {
  // Register the templates defined in /templates.
  return [
    'block__block_content__utnews_article_listing' => [
      'base hook' => 'block',
    ],
    'block__inline_block__utnews_article_listing' => [
      'base hook' => 'block',
    ],
  ];
}

/**
 * Implements hook_preprocess_block().
 */
function utnews_block_type_news_listing_preprocess_block(&$variables) {
  // Add a rendered View of the news listings matching criteria specified
  // from the block's fields.
  $content = $variables['elements']['content'];
  if (isset($content['#block_content']) && $content['#block_content'] instanceof BlockContentInterface) {
    if ($content['#block_content']->bundle() === 'utnews_article_listing') {
      $variables['cta'] = NewsListingHelper::generateCta($content['#block_content']);

      if ($listing = NewsListingHelper::buildContextualView($content['#block_content'])) {
        $variables['listing'] = $listing;
        $variables['#attached']['library'][] = 'utnews_block_type_news_listing/utnews-listing-block';
      }
    }
  }
}

/**
 * Implements hook_plugin_filter_TYPE__CONSUMER_alter().
 */
function utnews_block_type_news_listing_plugin_filter_block__layout_builder_alter(array &$definitions) {
  // The News Listing view block is not intended to be placed on its own,
  // but rather via the News listing block type.
  unset($definitions['views_block:utnews_listing_block-block_1']);
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function utnews_block_type_news_listing_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  // The 'teaser' view mode shipped by the News add-on includes logic to
  // dynamically display date, summary, and media when used with the
  // `utnews_listing` Views field handler. If you want to use this views field
  // handler with other view modes, use the logic, below, along with
  // `node--utnews-news--teaser.html.twig`, which explicitly renders those
  // fields individually, as a model.
  if ($entity->bundle() !== 'utnews_news' || $view_mode !== 'teaser') {
    return;
  }

  if (isset($build['#display_date']) && !$build['#display_date']) {
    unset($build['field_utnews_publication_date']);
  }
  if (isset($build['#display_summary']) && !$build['#display_summary']) {
    unset($build['field_utnews_body']);
  }
  if (isset($build['#display_thumbnail']) && !$build['#display_thumbnail']) {
    unset($build['field_utnews_main_media']);
  }
}
